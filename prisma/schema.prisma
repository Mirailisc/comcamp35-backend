generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  prefix        String?
  first_name    String?
  middle_name   String?
  last_name     String?
  nickname      String?
  profile_url   String?
  is_registered Boolean    @default(false)
  created_at    DateTime   @default(now())
  files         File[]
  Form          Form?
  Guardian      Guardian?
  Education     Education?
}

model Form {
  id               Int      @id @default(autoincrement())
  birth_date       DateTime
  tel              String
  address          String
  travel           String
  shirt_size       String
  can_bring_laptop Boolean
  food_allergy     String?
  favorite_food    String?
  disease          String?
  personal_drug    String?
  drug_allergy     String?
  insurance        String?
  created_at       DateTime @default(now())
  userId           Int      @unique
  user             User     @relation(fields: [userId], references: [id])
}

model Guardian {
  id         Int      @id @default(autoincrement())
  name       String
  tel        String
  relation   String
  email      String?
  emergency_name       String
  emergency_tel        String
  emergency_relation   String
  emergency_email      String?
  created_at DateTime @default(now())
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
}

model Education {
  id          Int      @id @default(autoincrement())
  school_name String
  major       String
  degree      String
  gpax        Float
  created_at  DateTime @default(now())
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id])
}

model File {
  id         Int      @id @default(autoincrement())
  url        String
  type       String
  userId     Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}
